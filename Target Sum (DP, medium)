https://www.geeksforgeeks.org/problems/target-sum-1626326450/1

Question is same as "Partitions with Given Difference (DP, medium)" but way its was asked is different (remember we can solve with other approach as well)

lets consider one of the answers of test case 1 :
-1 + 1 + 1 + 1 + 1 = 3

here we just need to separate +ve and -ve value as S1(X) [1,1,1,1]=4 and S1(Y)[1]=1 , difference = 3 (4-1), sum=5
so this problem can be solved similar to : https://github.com/yathish-yathi/DSA_Practice/blob/main/Partitions%20with%20Given%20Difference%20(DP,%20medium)
========
Target Sum
Difficulty: Medium

Given an array of integers A[] of length N and an integer target.
You want to build an expression out of A by adding one of the symbols '+' and '-' before each integer in A and then concatenate all the integers.

For example, if arr = {2, 1}, you can add a '+' before 2 and a '-' before 1 and concatenate them to build the expression "+2-1".
Return the number of different expressions that can be built, which evaluates to target and return your answer with modulo 109+7.


Example 1:

Input:
N = 5
A[] = {1, 1, 1, 1, 1}
target = 3
Output:
5
Explanation:
There are 5 ways to assign symbols to 
make the sum of nums be target 3.
-1 + 1 + 1 + 1 + 1 = 3
+1 - 1 + 1 + 1 + 1 = 3
+1 + 1 - 1 + 1 + 1 = 3
+1 + 1 + 1 - 1 + 1 = 3
+1 + 1 + 1 + 1 - 1 = 3

Example 2:

Input:
N = 1
A[] = {1}
target = 1
Output:
1

Your Task:
The task is to complete the function findTargetSumWays() which finds and returns the number of different expressions that can be built with modulo 109 + 7.

 

Expected Time Complexity: O(N*sum), where sum refers to the range of sum possible.
Expected Auxiliary Space: O(N).

 

Constraints:
1 ≤ N ≤ 100
-1000 ≤ A[i] ≤ 1000
0 <= sum(A[i]) <= 104
-1000 <= target <= 1000
