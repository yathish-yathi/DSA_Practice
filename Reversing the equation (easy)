https://www.geeksforgeeks.org/problems/reversing-the-equation2205/1

T O(n), S O(1)

//create ans and temp strings
//traverese the string from end to front
//when we encounter a digit append to front of temp (since we are traversing from end
//appending to front will not reverese the string)
//when we encounter a non-digit append temp then non-digit
//mark temp as empty
//before retuning append temp one more time to add any last digit

//User function Template for Java
class Solution
{
   
    String reverseEqn(String S)
    {
        // your code here
        String ans = "";
        String temp= "";
        
        for(int i=S.length()-1; i>=0; i--){
            
            if(Character.isDigit(S.charAt(i))){
                temp=S.charAt(i)+temp;
                continue;
            }
            
            ans = ans+temp;
            temp="";
            ans = ans+S.charAt(i);
        }

        ans = ans+temp;
        return ans;
    }
}
============
Reversing the equation
Difficulty: Easy

Given a mathematical equation that contains only numbers and +, -, *, /. Print the equation in reverse, such that the equation is reversed, but the numbers remain the same.
It is guaranteed that the given equation is valid, and there are no leading zeros.

Example 1:

Input:
S = "20-3+5*2"
Output: 2*5+3-20
Explanation: The equation is reversed with
numbers remaining the same.
Example 2:

Input: 
S = "5+2*56-2/4"
Output: 4/2-56*2+5
Explanation: The equation is reversed with
numbers remaining the same.
Your Task:
You don't need to read input or print anything. Your task is to complete the function reverseEqn() which takes the string S representing the equation as input and returns the resultant string representing the equation in reverse.

Expected Time Complexity: O(|S|).
Expected Auxiliary Space: O(|S|).

Constraints:
1<=|S|<=105
The string contains only the characters '0' - '9', '+', '-', '*', and '/'.

 
