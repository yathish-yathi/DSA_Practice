https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/
https://www.youtube.com/watch?v=MG-Ac4TAvTY

T O(nlog(sum-max)) , S O(1)

//considet test case [1,2,3,4,5,6,7,8,9,10] ,
// here ship must have capacity 10 else it can not trasport weight 10
//maximum capacity is equal to sumation of all weight, so we will
//So our possible capacity of ship will be present between 10 and 55
//instead of linear search we use binary search because we know if
//a capacity(mid) suffient to transport weight within given days (true), i.e. 
//all capacities right to that capacity will be true and can be ignored, so move high to mid-1, 
//if capacity/mid is false that means left to that capacity will be 
// false so can be ignored low=mid+1

class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int sum=Arrays.stream(weights).sum();
        int maxWeight=Arrays.stream(weights).max().getAsInt();

        //Binary Search
        int low=maxWeight;
        int high=sum;
        while(low<=high){
            int mid=(low+high)/2;
            if(minCapacity(weights, days, mid)){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return low;
    }

    public boolean minCapacity(int[] weights, int days, int capacity){
        int day=1;
        int load=weights[0];
        for(int i=1; i<weights.length; i++){
            if(load+weights[i] > capacity){
                day++;
                load=weights[i];
                if(day>days){
                    return false;
                }
            }else{
                load=load+weights[i];
            }
        }
        return true;
    }
}

//========================

Capacity To Ship Packages Within D Days
Medium
A conveyor belt has packages that must be shipped from one port to another within days days.

The ith package on the conveyor belt has a weight of weights[i]. Each day, we load the ship with packages on the conveyor belt (in the order given by weights). We may not load more weight than the maximum weight capacity of the ship.

Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within days days.

 

Example 1:

Input: weights = [1,2,3,4,5,6,7,8,9,10], days = 5
Output: 15
Explanation: A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:
1st day: 1, 2, 3, 4, 5
2nd day: 6, 7
3rd day: 8
4th day: 9
5th day: 10

Note that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed.
Example 2:

Input: weights = [3,2,2,4,1,4], days = 3
Output: 6
Explanation: A ship capacity of 6 is the minimum to ship all the packages in 3 days like this:
1st day: 3, 2
2nd day: 2, 4
3rd day: 1, 4
Example 3:

Input: weights = [1,2,3,1,1], days = 4
Output: 3
Explanation:
1st day: 1
2nd day: 2
3rd day: 3
4th day: 1, 1
 

Constraints:

1 <= days <= weights.length <= 5 * 104
1 <= weights[i] <= 500
