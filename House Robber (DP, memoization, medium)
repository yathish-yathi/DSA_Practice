https://leetcode.com/problems/house-robber/description/

//We have used memoization techinque
//=> at every point we are finding what is the max value so far
//=> at any point we have two options 
//a.INCLUDE current value (but we can not include previous (n-1) value so we need to take 
// max sum till (n-2))
//b. EXCLUDE current value (in this case we can use previous element, 
//so max value till previous element(n-1) will maximize the sum//)
// maximum of when included cur and excluded cur will be the maximum sum till cur point.
//1. initialise s1 = max sum till 0th element is nums[0]
//2. initialise s2 = max sum till 1st element since we can choose only one of 0th and 
//1st element because we can not add 2 consecutive elements so max will 1st point will
// be maximum of nums[0] and nums[1]
//3. Run a for loop till 2 t0 n-1, find so far max at every point
//4. find value INCLUDING cur(n) and max till (n-2)
//5. then EXCLUDING cur(n) and by using max till (n-1)
//6. Maximum of INCLUDING and EXCLUDING will max till nth point
//7. after traversing all point return sum till last point

class Solution {
    public int rob(int[] nums) {
        
        int n = nums.length;

        if(n==1) return nums[0];
        if(n==2) return Math.max(nums[0], nums[1]);

        int s1 = nums[0];
        int s2 = Math.max(nums[0], nums[1]);
        int s3 =0;
        for(int i=2; i<n; i++){
            int cur = nums[i];

            int includeCur = s1 + cur;
            int excludeCur = s2;

            s3 = Math.max(includeCur, excludeCur);

            s1 = s2;
            s2 = s3;
        }

        return s3;
    }
}

======
198. House Robber
Solved
Medium
Topics
Companies
You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night.

Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.

 

Example 1:

Input: nums = [1,2,3,1]
Output: 4
Explanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).
Total amount you can rob = 1 + 3 = 4.
Example 2:

Input: nums = [2,7,9,3,1]
Output: 12
Explanation: Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).
Total amount you can rob = 2 + 9 + 1 = 12.
 

Constraints:

1 <= nums.length <= 100
0 <= nums[i] <= 400
