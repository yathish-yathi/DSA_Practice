https://leetcode.com/problems/validate-binary-search-tree/description/

T O(n), S O(1)

//We can get values of inorder traversel and check if they are in ascending order or not
//but it will take extra O(n) space
//here we are updating range at each traversal
//if value of any node is out side of that range then return false
//Note here we can not use   Integer.MIN/MAX_VALUE because when we do +/-1 to min/max 
//which traversing to next node it will store wrong value because sum exceeds Integer limit.
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        
        return isValidBST_helper(root, Long.MIN_VALUE, Long.MAX_VALUE);
    }

    public boolean isValidBST_helper(TreeNode root, long min, long max) {
        if(root==null){
            return true;
        }

        if(root.val<min || root.val>max){
            return false;
        }

        return isValidBST_helper(root.left, min, (long)root.val-1) 
                && isValidBST_helper(root.right, (long)root.val+1, max);
    }
}

//=========
Validate Binary Search Tree
Medium
Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

The left 
subtree
 of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.
 

Example 1:


Input: root = [2,1,3]
Output: true
Example 2:


Input: root = [5,1,4,null,null,3,6]
Output: false
Explanation: The root node's value is 5 but its right child's value is 4.
 

Constraints:

The number of nodes in the tree is in the range [1, 104].
-231 <= Node.val <= 231 - 1
